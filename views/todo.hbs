{{!-- Navbar goes here --}}
<nav class="navbar navbar-expand-md navbar-light" style="background-color: rgb(218,165,32);">
        <a class="navbar-brand" href="#">Todo App</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
            </button>          
            
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
                </li>
            </ul>
            <form class="form-inline my-2 my-lg-0">
                <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-primary my-2 my-sm-0" type="submit">Search</button>
            </form>
            </div>
        </nav>



<div class="container">
    <ul id="todos" class="list-group list-group-flush"></ul>
</div>

<script>
    let todos = document.getElementById('todos');

    fetch('/todo/getTodos')
    .then((data) => data.json())
    .then((data) => {
        
        for (let i = 0; i < data.length; i++) {
            let newDiv = document.createElement('li')
            newDiv.className = 'todo list-group-item';
            newDiv.id = "todo" + data[i].id;
            let name = document.createElement('span');
            let circle = document.createElement('span');
            circle.innerHTML =                 
                    '<svg class="bi bi-check-circle" width="1.5em" height="1.5em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/><path class="check" visibility="hidden" fill-rule="evenodd" d="M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z"/> </svg>   '
            circle.id = data[i].id;
            circle.className = 'circle';
            newDiv.appendChild(circle);
            name.textContent = data[i].name + '  ';
            newDiv.appendChild(name);
            todos.appendChild(newDiv);
        }

        // making the circles interactive
        let circles = document.getElementsByClassName('circle');
        let checks = document.getElementsByClassName('check');

        for (let i = 0; i < circles.length; i++) {
            circles[i].onclick = () => {
                console.log("You clicked the circle with the id: ", circles[i].id)
                checks[i].style.visibility = 'visible';
                setTimeout(() => {
                    let id = circles[i].id
                    let todo_id = 'todo'+ id
                    let deleteTodo = document.getElementById(todo_id);
                    deleteTodo.style.display = 'none';
                }, 500);
            }
        }

        
    })
    

</script>